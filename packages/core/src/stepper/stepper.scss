@import "./variables";

.#{$component-prefix}stepper {
  display: inline-block;
  user-select: none;

  &__decrease,
  &__increase {
    position: relative;
    box-sizing: border-box;
    display: inline-block;
    width: var(--stepper-input-height, $stepper-input-height);
    height: var(--stepper-input-height, $stepper-input-height);
    padding: 0;
    margin: 0;
    color: var(--stepper-button-icon-color, $stepper-button-icon-color);
    vertical-align: middle;
    cursor: pointer;
    background-color: var(--stepper-background-color, $stepper-background-color);
    border: 0;

    &::before {
      width: 50%;
      height: 1px * $hd;
    }

    &::after {
      width: 1px * $hd;
      height: 50%;
    }

    &::before,
    &::after {
      position: absolute;
      top: 50%;
      left: 50%;
      content: '';
      background-color: currentColor;
      transform: translate(-50%, -50%);
    }

    &:active {
      background-color: var(--stepper-active-color, $stepper-active-color);
    }

    &--disabled {
      color: var(--stepper-button-disabled-icon-color, $stepper-button-disabled-icon-color);
      cursor: not-allowed;
      background-color: var(--stepper-button-disabled-color, $stepper-button-disabled-color);

      &:active {
        background-color: var(--stepper-button-disabled-color, $stepper-button-disabled-color);
      }
    }
  }

  &__decrease {
    border-radius: var(--stepper-border-radius, $stepper-border-radius) 0 0 var(--stepper-border-radius, $stepper-border-radius);

    &::after {
      display: none;
    }
  }

  &__increase {
    border-radius: 0 var(--stepper-border-radius, $stepper-border-radius) var(--stepper-border-radius, $stepper-border-radius) 0;
  }


  &__input {
    box-sizing: border-box;
    display: inline-block;
    width: var(--stepper-input-width, $stepper-input-width);
    height: var(--stepper-input-height, $stepper-input-height);
    padding: 0;
    margin: 0 2px * $hd;
    font-size: var(--stepper-input-font-size, $stepper-input-font-size);
    line-height: var(--stepper-input-line-height, $stepper-input-line-height);
    color: var(--stepper-input-text-color, $stepper-input-text-color);
    text-align: center;
    vertical-align: middle;
    background-color: var(--stepper-background-color, $stepper-background-color);
    border: 0 none;
    border-radius: 0;
    appearance: none;

    &:disabled {
      color: var(--stepper-input-disabled-text-color, $stepper-input-disabled-text-color);
      background-color: var(--stepper-input-disabled-background-color, $stepper-input-disabled-background-color);
      opacity: 1;
      // fix disabled color in iOS
      -webkit-text-fill-color: var(--stepper-input-disabled-text-color, $stepper-input-disabled-text-color);
    }

    &:read-only {
      cursor: default;
    }

    .weui-input {
      height: 100%;
    }
  }


  &--round {
    .#{$component-prefix}stepper__input {
      background-color: transparent;
    }

    .#{$component-prefix}stepper__decrease,
    .#{$component-prefix}stepper__increase {
      border-radius: 100%;

      &:active {
        opacity: $active-opacity;
      }

      &--disabled {
        &,
        &:active {
          opacity: 0.3;
        }
      }
    }

    .#{$component-prefix}stepper__increase {
      color: $white;
      background-color: var(--stepper-button-round-color, $stepper-button-round-color);
    }

    .#{$component-prefix}stepper__decrease {
      color: var(--stepper-button-round-color, $stepper-button-round-color);
      background-color: $white;
      border: 1px solid var(--stepper-button-round-color, $stepper-button-round-color);
    }
  }

}
